ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# install all the packages
packages <- c("GGally", "spatstat", "dismo", "MASS", "ggplot2", "plyr", "sp", "maps", "maptools", "raster", "geostatsp", "rgdal")
ipak(packages)
# set the working directory
setwd("~/shp")
# set the working directory
setwd("C:/Users/Mikel/Documents/Curso_2020-2021/Articulo_Monforte_QI/Github/shp")
getwd
getwd ()
# set the projection
BNG = "+init=epsg:25829"
# add the study area
studyarea <- readShapePoly("study_area.shp", proj4string = CRS(BNG))
# install all the packages
packages <- c("GGally", "spatstat", "dismo", "MASS", "ggplot2", "plyr", "sp", "maps", "maptools", "raster", "geostatsp", "rgdal")
ipak(packages)
# set the working directory
setwd("C:/Users/Mikel/Documents/Curso_2020-2021/Articulo_Monforte_QI/Github/shp")
# set the projection
BNG = "+init=epsg:25829"
# add the study area
studyarea <- readShapePoly("study_area.shp", proj4string = CRS(BNG))
# and check it is worked
plot(studyarea)
# add the sites
sites <- readShapePoints("sites.shp", proj4string = CRS(BNG))
studyarea <- readShapePoly("study_area.shp", proj4string = CRS(BNG))
# and check it is worked
plot(studyarea)
studyarea <- readOGR(dsn="study_area.shp", proj4string = CRS(BNG))
studyarea <- readOGR(dsn="study_area.shp", proj4string = CRS(BNG))
studyarea <- readOGR(dsn="study_area.shp", layer= "studyarea")
knitr::opts_chunk$set(eval = FALSE,
echo = TRUE)
# ad the shapefile
locations <- readOGR(dsn="locations.shp", layer="locations")
# set the working directory
setwd("~/shp")
locations <- readOGR(dsn="locations.shp", layer="locations")
studyarea <- readOGR(dsn="study_area.shp", layer="studyarea")
# set the working directory
setwd("C:/Users/Mikel/Documents/Curso_2020-2021/Articulo_Monforte_QI/Github/shp")
# add the study area
studyarea <- readOGR(dsn="study_area.shp", layer="studyarea")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# install all the packages
packages <- c("GGally", "spatstat", "dismo", "MASS", "ggplot2", "plyr", "sp", "maps", "maptools", "raster", "geostatsp", "rgdal")
ipak(packages)
install.packages(geostatsp)
install.packages("geostatsp")
# install all the packages
packages <- c("GGally", "spatstat", "dismo", "MASS", "ggplot2", "plyr", "sp", "maps", "maptools", "raster", "geostatsp", "rgdal")
ipak(packages)
library(geostatsp)
install.packages("geostatsp")
library(geostatsp)
# add the study area
studyarea <- readOGR(dsn="study_area.shp", layer="studyarea")
# set the working directory
setwd("C:/Users/Mikel/Documents/Curso_2020-2021/Articulo_Monforte_QI/Github/shp")
# set the projection
BNG = "+init=epsg:25829"
# add the study area
studyarea <- readOGR(dsn="study_area.shp", proj4string = CRS(BNG), layer="studyarea")
# add the study area
studyarea <- readOGR(dsn="study_area.shp", layer="studyarea")
library(rgdal)
# add the study area
studyarea <- readOGR(dsn="study_area.shp", layer="studyarea")
ogrInfo
# add the sites
sites <- readShapePoints("sites.shp", proj4string = CRS(BNG))
# add the random points
random_sites <- readShapePoints("random_sites.shp", proj4string = CRS(BNG))
rgdal::readOGR
knitr::opts_chunk$set(eval = FALSE,
echo = TRUE)
# ipak function: install and load multiple R packages.
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# install all the packages
packages <- c("GGally", "spatstat", "dismo", "MASS", "ggplot2", "plyr", "sp", "maps", "maptools", "raster", "geostatsp", "rgdal")
ipak(packages)
# set the working directory
setwd("~/shp")
# set the working directory
setwd("C:/Users/Mikel/Documents/Curso_2020-2021/Articulo_Monforte_QI/Github/patterns_monforte/shp")
# add the study area
studyarea <- readOGR(dsn="study_area.shp", layer="study_area")
# and check it is worked
plot(studyarea)
# add the sites
sites <- readOGR(dsn="sites.shp", layer="sites")
# add the random points
random_sites <- readOGR(dsn="random_sites.shp", layer="random_sites")
# plot the studyarea and the sites and check everything looks ok
plot(sites, col="blue", pch=20, add=T)
# remove any sites with the same grid reference
sites <- remove.duplicates(sites)
# select the points inside the studyarea
sitesSub <- sites[studyarea,]
# check to see that they have been removed
plot(studyarea)
plot(sitesSub, col="red", pch=20, add=T)
# set a window as the studyarea
window <- as.owin(studyarea)
plot(window)
# create a ppp object
sitesSub.ppp <- ppp(x=sitesSub$UTMX,y=sitesSub$UTMY,window=window)
# plot the sites and the studyarea
plot(sitesSub.ppp,pch=16,cex=0.5, main="Palaeolithic archaeological sites")
# Shapiro-Wilk Test
shapiro.test(sites$UTMX)
# K-S sites vs random sites
ks.test(sites$UTMX,random_sites$UTMX)
# X2 test sites
chisq.test(sites$UTMX,random_sites$UTMX)
# X2 test sites
chisq.test(sites$UTMX,random_sites$UTMX)
# K-S sites vs random sites
ks.test(sites$UTMX,random_sites$UTMX)
# X2 test sites
chisq.test(sites$UTMX,random_sites$UTMX)
# set the simulations
sims <- 99
# to get 95% envelope
nrank <- round((sims + 1) / 100 * 2.5, 0)
# Kfunction sites
Kfunction <- envelope(sitesSub.ppp,Kest, nsim=sims,rank=nrank, correction="best")
# Homogeneous
plot(Kfunction,main="a. K Function (homogeneous)",legend=FALSE)
# Inhomogeneous
KinhomFunction <- envelope(sitesSub.ppp,Kinhom, nsim=sims,rank=nrank, correction="best")
plot(KinhomFunction,main="b. K Function (inhomogeneous)",legend=FALSE)
T
# Shapiro-Wilk Test random sites
shapiro.test(random_sites$UTMX)
