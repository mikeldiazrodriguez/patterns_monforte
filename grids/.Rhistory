knitr::opts_chunk$set(eval = FALSE,
echo = TRUE)
# ipak function: install and load multiple R packages.
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# usage
packages <- c("spatstat", "sp", "rgeos", "maptools", "GISTools", "ggplot2", "fpc", "plyr", "gridExtra", "dbscan", "tidyverse", "cluster", "factoextra", "gridExtra", "readxl", "NbClust", "percopackage", "rgdal", "igraph")
ipak(packages)
# set the working directory
setwd("~/shp")
knitr::opts_chunk$set(eval = FALSE,
echo = TRUE)
remove.packages("yaml")
install.packages("yaml")
remove.packages("yaml")
install.packages("yaml")
remove.packages("yaml")
install.packages("yaml")
library(devtools)
library(devtools)
library(rgdal)
library(rgeos)
library(sp)
library(raster)
library(gdistance)
library(leastcostpath)
r <- raster("C:/Users/Mikel/Documents/Curso_2020-2021/Articulo_Miguel/MegalithBayes/Cost/dem_90m.tif")
locs <- readOGR(dsn="C:/Users/Mikel/Documents/Curso_2020-2021/Articulo_Miguel/MegalithBayes/Cost/sites.shp", layer="sites")
plot(r)
plot(locs)
slope_cs <- create_slope_cs(r, cost_function = 'tobler')
create_slope_cs(
r,
cost_function = "tobler",
neighbours = 16,
crit_slope = 12,
max_slope = NULL,
percentile = 0.5,
exaggeration = FALSE
)
lcp_network <- create_slope_cs(dem = r, cost_function = 'tobler', neighbours = 16) %>%
"*" (create_traversal_cs(dem = r, neighbours = 16)) %>%
create_FETE_lcps(cost_surface = ., locations = locs, cost_distance = FALSE, parallel = FALSE)
memory.limit
c_memsize
install.packages("rgrass")
library(rgrass)
library("rgrass")
library(rgrass7-package)
install.packages("rgrass7")
library(rgrass7)
library(rgrass7)
r.walk
execGRASS
install.packages("XML")
install.packages("XML")
library(XML)
library(rgrass7)
execGRASS
library(rgrass7)
execGRASS
install.packages(fmsb)
# Radar chart with fmsb package
library(fmsb)
install.packages("fmsb")
# Radar chart with fmsb package
library(fmsb)
# Construct the data set (Data from Marvel.com)
data ＜- data.frame(Strength = c(7, 0, 6),
Speed = c(7, 0, 5),
Intelligence = c(7, 0, 6),
Fighting_Skills = c(7, 0, 4),
Energy = c(7, 0, 6),
Durability = c(7, 0, 6))
radarchart(data,
seg = 7,  # Number of axis segments
title = "Iron Man Radar Chart",
pfcol = scales::alpha("gray", 0.3),
plwd = 2)
# Construct the data set
data ＜- data.frame(Strength = c(7, 0, 6, 7, 4, 3),
Speed = c(7, 0, 5, 7, 3, 2),
Intelligence = c(7, 0, 6, 2, 4, 3),
Fighting_Skills = c(7, 0, 4, 4, 4, 6),
Energy = c(7, 0, 6, 6, 1, 1),
Durability = c(7, 0, 6, 6, 3, 3),
row.names = c("max", "min", "Iron Man", "Thor",
"Spiderman", "Captain America"))
# Define fill colors
colors_fill ＜- c(scales::alpha("gray", 0.1),
scales::alpha("gold", 0.1),
scales::alpha("tomato", 0.2),
scales::alpha("skyblue", 0.2))
# Define line colors
colors_line ＜- c(scales::alpha("darkgray", 0.9),
scales::alpha("gold", 0.9),
scales::alpha("tomato", 0.9),
scales::alpha("royalblue", 0.9))
# Create plot
radarchart(data,
seg = 7,  # Number of axis segments
title = "Avengers Radar Chart",
pcol = colors_line,
pfcol = colors_fill,
plwd = 4)
# Add a legend
legend(x=0.6,
y=1.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Add a legend
legend(x=0.6,
y=2.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Add a legend
legend(x=1.6,
y=1.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Create plot
radarchart(data,
seg = 7,  # Number of axis segments
title = "Avengers Radar Chart",
pcol = colors_line,
pfcol = colors_fill,
plwd = 4)
# Add a legend
legend(x=0.9,
y=1.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Create plot
radarchart(data,
seg = 7,  # Number of axis segments
title = "Avengers Radar Chart",
pcol = colors_line,
pfcol = colors_fill,
plwd = 4)
# Add a legend
legend(x=1.25,
y=1.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Create plot
radarchart(data,
seg = 7,  # Number of axis segments
title = "Avengers Radar Chart",
pcol = colors_line,
pfcol = colors_fill,
plwd = 4)
# Add a legend
legend(x=1.25,
y=1.35,
legend = rownames(data[-c(1,1),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Create plot
radarchart(data,
seg = 7,  # Number of axis segments
title = "Avengers Radar Chart",
pcol = colors_line,
pfcol = colors_fill,
plwd = 4)
# Add a legend
legend(x=1.25,
y=1.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Construct the data set (Data from Marvel.com)
data ＜- data.frame(Strength = c(7, 0, 6),
Speed = c(7, 0, 5),
Intelligence = c(7, 0, 6),
Fighting_Skills = c(7, 0, 4),
Energy = c(7, 0, 6),
Durability = c(7, 0, 6))
radarchart(data,
seg = 7,  # Number of axis segments
title = "Iron Man Radar Chart",
pfcol = scales::alpha("gray", 0.3),
plwd = 2)
library(readxl)
porteros <- read_excel("C:/Users/Mikel/Documents/Curso_2020-2021/DataDepor/porteros.xlsx")
View(porteros)
# Construct the data set
data ＜- data.frame(Partidos jugados = c(138, 0, 118, 39),
Partidos ganados = c(138, 0, 42, 14),
Partidos empatados = c(138, 0, 37, 10),
Partidos perdidos = c(138, 0, 39, 15),
Goles encajados = c(138, 0, 138, 42),
Partidos sin encajar = c(138, 0, 35, 14),
Jornadas seguidas sin encajar = c(138, 0, 5, 4),
Jornadas seguidas encajando = c(138, 0, 7, 7),
Tarjetas amarillas = c(138, 0, 6, 4),
Tarjetas rojas = c(138, 0, 0, 0),
row.names = c("max", "min", "Carlos Abad", "Lucho"
))
# Construct the data set
data ＜- data.frame(Partidos_jugados = c(138, 0, 118, 39),
Partidos_ganados = c(138, 0, 42, 14),
Partidos_empatados = c(138, 0, 37, 10),
Partidos_perdidos = c(138, 0, 39, 15),
Goles_encajados = c(138, 0, 138, 42),
Partidos_sin_encajar = c(138, 0, 35, 14),
Jornadas_seguidas_sin_encajar = c(138, 0, 5, 4),
Jornadas_seguidas_encajando = c(138, 0, 7, 7),
Tarjetas_amarillas = c(138, 0, 6, 4),
Tarjetas_rojas = c(138, 0, 0, 0),
row.names = c("max", "min", "Carlos Abad", "Lucho"
))
# Define fill colors
colors_fill ＜- c(scales::alpha("tomato", 0.1),
scales::alpha("gold", 0.1))                 )
# Define fill colors
colors_fill ＜- c(scales::alpha("tomato", 0.1),
scales::alpha("gold", 0.1))                 )
# Define fill colors
colors_fill ＜- c(scales::alpha("tomato", 0.1),
scales::alpha("gold", 0.1)
)
# Define line colors
colors_line ＜- c(scales::alpha("darkgray", 0.9),
scales::alpha("royalblue", 0.9))
# Create plot
radarchart(data,
seg = 10,  # Number of axis segments
title = "Porteros Dépor",
pcol = colors_line,
pfcol = colors_fill,
plwd = 2)
# Construct the data set
data ＜- data.frame("Partidos jugados" = c(138, 0, 118, 39),
Partidos_ganados = c(138, 0, 42, 14),
Partidos_empatados = c(138, 0, 37, 10),
Partidos_perdidos = c(138, 0, 39, 15),
Goles_encajados = c(138, 0, 138, 42),
Partidos_sin_encajar = c(138, 0, 35, 14),
Jornadas_seguidas_sin_encajar = c(138, 0, 5, 4),
Jornadas_seguidas_encajando = c(138, 0, 7, 7),
Tarjetas_amarillas = c(138, 0, 6, 4),
Tarjetas_rojas = c(138, 0, 0, 0),
row.names = c("max", "min", "Carlos Abad", "Lucho"
))
# Define fill colors
colors_fill ＜- c(scales::alpha("tomato", 0.1),
scales::alpha("gold", 0.1)
)
# Define line colors
colors_line ＜- c(scales::alpha("darkgray", 0.9),
scales::alpha("royalblue", 0.9))
# Create plot
radarchart(data,
seg = 10,  # Number of axis segments
title = "Porteros Dépor",
pcol = colors_line,
pfcol = colors_fill,
plwd = 2)
# Construct the data set
data ＜- data.frame("Partidos jugados" = c(138, 0, 118, 39),
"Partidosg anados" = c(138, 0, 42, 14),
"Partidos empatados" = c(138, 0, 37, 10),
"Partidos perdidos" = c(138, 0, 39, 15),
"Goles encajados" = c(138, 0, 138, 42),
"Partidos sin encajar" = c(138, 0, 35, 14),
"Jornadas seguidas sin encajar" = c(138, 0, 5, 4),
"Jornadas seguidas encajando" = c(138, 0, 7, 7),
"Tarjetas amarillas" = c(138, 0, 6, 4),
"Tarjetas rojas" = c(138, 0, 0, 0),
row.names = c("max", "min", "Carlos Abad", "Lucho"
))
# Define fill colors
colors_fill ＜- c(scales::alpha("tomato", 0.1),
scales::alpha("gold", 0.1)
)
# Define line colors
colors_line ＜- c(scales::alpha("darkgray", 0.9),
scales::alpha("royalblue", 0.9))
# Create plot
radarchart(data,
seg = 10,  # Number of axis segments
title = "Porteros Dépor",
pcol = colors_line,
pfcol = colors_fill,
plwd = 2)
# Add a legend
legend(x=1.25,
y=1.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Define fill colors
colors_fill ＜- c(scales::alpha("gray", 0.1),
scales::alpha("blue", 0.1)
)
# Define line colors
colors_line ＜- c(scales::alpha("darkgray", 0.9),
scales::alpha("royalblue", 0.9))
# Create plot
radarchart(data,
seg = 10,  # Number of axis segments
title = "Porteros Dépor",
pcol = colors_line,
pfcol = colors_fill,
plwd = 2)
# Add a legend
legend(x=1.25,
y=1.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Construct the data set
data ＜- data.frame("Partidos jugados" = c(138, 0, 118, 39),
"Partidos ganados" = c(138, 0, 42, 14),
"Partidos empatados" = c(138, 0, 37, 10),
"Partidos perdidos" = c(138, 0, 39, 15),
"Goles encajados" = c(138, 0, 138, 42),
"Partidos sin encajar" = c(138, 0, 35, 14),
"Jornadas seguidas sin encajar" = c(138, 0, 5, 4),
"Jornadas seguidas encajando" = c(138, 0, 7, 7),
"Tarjetas amarillas" = c(138, 0, 6, 4),
"Tarjetas rojas" = c(138, 0, 0, 0),
row.names = c("max", "min", "Carlos Abad", "Lucho"
))
# Define fill colors
colors_fill ＜- c(scales::alpha("gray", 0.1),
scales::alpha("blue", 0.1)
)
# Define line colors
colors_line ＜- c(scales::alpha("darkgray", 0.9),
scales::alpha("royalblue", 0.9))
# Create plot
radarchart(data,
seg = 10,  # Number of axis segments
title = "Porteros Dépor",
pcol = colors_line,
pfcol = colors_fill,
plwd = 2)
# Add a legend
legend(x=1.25,
y=1.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Define fill colors
colors_fill ＜- c(scales::alpha("gray", 0.1),
scales::alpha("blue", 0.1))
# Define line colors
colors_line ＜- c(scales::alpha("darkgray", 0.9),
scales::alpha("royalblue", 0.9))
# Create plot
radarchart(data,
seg = 10,  # Number of axis segments
title = "Porteros Dépor",
pcol = colors_line,
pfcol = colors_fill,
plwd = 2)
# Create plot
radarchart(data,
seg = 10,  # Number of axis segments
title = "Porteros Dépor",
pcol = colors_line,
pfcol = colors_fill,
plwd = 2)
# Create plot
radarchart(data,
seg = 10,  # Number of axis segments
title = "Porteros Dépor",
pcol = colors_line,
pfcol = colors_fill,
plwd = 2)
# Add a legend
legend(x=1.25,
y=1.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
5+3 #example
5+3 #example
5+2 #example
x <- 5
install.packages("rgdal")
install.packages("cluster")
install.packages("factoextra")
install.packages("vegclust")
#Load data
library(rgdal)
mydata<-readOGR("shp/khabur_triangle.shp",layer="khabur_triangle") # load shape file
mydata<-readOGR("C:/Users/Mikel/Documents/Curso_2021-2022/Margarita_Salas-project/Sites size/data and model/shp/khabur_triangle.shp",layer="khabur_triangle") # load shape file
mydata<-mydata@data #convert shape file into a data frame
View(mydata)
# Percolation analysis
library(percopackage)
# Percolation analysis
library("percopackage")
install.packages("percopackage")
library(percopackage)
library("percopackage")
# Percolation analysis
install.packages("percopackage")
library("percopackage")
install.packages("percopackage")
devtools::install_github("SCSchmidt/percopackage")
devtools::install_github("SCSchmidt/percopackage")
remove.packages(rlang)
install.packages("rlang")
install.packages("rlang")
devtools::install_github("SCSchmidt/percopackage")
devtools::install_github("SCSchmidt/percopackage")
install.packages("Rtools")
devtools::install_github("SCSchmidt/percopackage")
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
Sys.which("make")
C:\Users\Mikel\Documents\Curso_2020-2021\Articulo_Monforte_QI\Github\patterns_monforte\grids
knitr::opts_chunk$set(eval = FALSE,
echo = TRUE)
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# install all the packages
packages <- c("GGally", "spatstat", "dismo", "MASS", "ggplot2", "plyr", "sp", "maps", "maptools", "raster", "geostatsp", "rgdal")
ipak(packages)
library(gstat)
install.packages("C:/Users/Mikel/Downloads/geostatsp_1.8.6.tar.gz", repos = NULL, type = "source")
library(geostatsp)
C:\Users\Mikel\Documents\Curso_2020-2021\Articulo_Monforte_QI\Github\patterns_monforte\grids
setwd("C:/Users/Mikel/Documents/Curso_2020-2021/Articulo_Monforte_QI/Github/patterns_monforte/grids")
elevation <- raster("grids/dem_monforte.tif")
studyarea <- readOGR(dsn="shp/study_area.shp", layer="study_area")
sites <- readOGR(dsn="shp/sites.shp", layer="sites")
area <- as(studyarea,"owin")
sppp <- ppp(x=sites$utmx, y=sites$utmy, window=area)
slope <- raster("grids/slope_monforte.tif")
wetland_cost <- raster("grids/wetland_cost_monforte.tiff")
hydro_cost <- raster("grids/hydrology_cost_monforte.tiff")
visual_prom <- raster("grids/visual_prominence_monforte.tif")
elev <- as.im(as(elevation,"SpatialGridDataFrame"))
slo <- as.im(as(slope,"SpatialGridDataFrame"))
wetl <- as.im(as(wetland_cost,"SpatialGridDataFrame"))
hydro <- as.im(as(hydro_cost,"SpatialGridDataFrame"))
vipro <- as.im(as(visual_prom,"SpatialGridDataFrame"))
elev.rh <- rhohat(sppp, elev, confidence=0.95)
elev.rh <- rhohat(sppp, elev, confidence=0.95)
slo.rh <- rhohat(sppp, slo, confidence=0.95)
elev <- as.im(as(elevation,"SpatialGridDataFrame"))
elev.rh <- rhohat(sppp, elev, confidence=0.95)
elev.rh <- rhohat(sppp, elev)
