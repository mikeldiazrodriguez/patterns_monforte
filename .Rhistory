slope_cs <- create_slope_cs(r, cost_function = 'tobler')
create_slope_cs(
r,
cost_function = "tobler",
neighbours = 16,
crit_slope = 12,
max_slope = NULL,
percentile = 0.5,
exaggeration = FALSE
)
lcp_network <- create_slope_cs(dem = r, cost_function = 'tobler', neighbours = 16) %>%
"*" (create_traversal_cs(dem = r, neighbours = 16)) %>%
create_FETE_lcps(cost_surface = ., locations = locs, cost_distance = FALSE, parallel = FALSE)
memory.limit
c_memsize
install.packages("rgrass")
library(rgrass)
library("rgrass")
library(rgrass7-package)
install.packages("rgrass7")
library(rgrass7)
library(rgrass7)
r.walk
execGRASS
install.packages("XML")
install.packages("XML")
library(XML)
library(rgrass7)
execGRASS
library(rgrass7)
execGRASS
install.packages(fmsb)
# Radar chart with fmsb package
library(fmsb)
install.packages("fmsb")
# Radar chart with fmsb package
library(fmsb)
# Construct the data set (Data from Marvel.com)
data ＜- data.frame(Strength = c(7, 0, 6),
Speed = c(7, 0, 5),
Intelligence = c(7, 0, 6),
Fighting_Skills = c(7, 0, 4),
Energy = c(7, 0, 6),
Durability = c(7, 0, 6))
radarchart(data,
seg = 7,  # Number of axis segments
title = "Iron Man Radar Chart",
pfcol = scales::alpha("gray", 0.3),
plwd = 2)
# Construct the data set
data ＜- data.frame(Strength = c(7, 0, 6, 7, 4, 3),
Speed = c(7, 0, 5, 7, 3, 2),
Intelligence = c(7, 0, 6, 2, 4, 3),
Fighting_Skills = c(7, 0, 4, 4, 4, 6),
Energy = c(7, 0, 6, 6, 1, 1),
Durability = c(7, 0, 6, 6, 3, 3),
row.names = c("max", "min", "Iron Man", "Thor",
"Spiderman", "Captain America"))
# Define fill colors
colors_fill ＜- c(scales::alpha("gray", 0.1),
scales::alpha("gold", 0.1),
scales::alpha("tomato", 0.2),
scales::alpha("skyblue", 0.2))
# Define line colors
colors_line ＜- c(scales::alpha("darkgray", 0.9),
scales::alpha("gold", 0.9),
scales::alpha("tomato", 0.9),
scales::alpha("royalblue", 0.9))
# Create plot
radarchart(data,
seg = 7,  # Number of axis segments
title = "Avengers Radar Chart",
pcol = colors_line,
pfcol = colors_fill,
plwd = 4)
# Add a legend
legend(x=0.6,
y=1.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Add a legend
legend(x=0.6,
y=2.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Add a legend
legend(x=1.6,
y=1.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Create plot
radarchart(data,
seg = 7,  # Number of axis segments
title = "Avengers Radar Chart",
pcol = colors_line,
pfcol = colors_fill,
plwd = 4)
# Add a legend
legend(x=0.9,
y=1.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Create plot
radarchart(data,
seg = 7,  # Number of axis segments
title = "Avengers Radar Chart",
pcol = colors_line,
pfcol = colors_fill,
plwd = 4)
# Add a legend
legend(x=1.25,
y=1.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Create plot
radarchart(data,
seg = 7,  # Number of axis segments
title = "Avengers Radar Chart",
pcol = colors_line,
pfcol = colors_fill,
plwd = 4)
# Add a legend
legend(x=1.25,
y=1.35,
legend = rownames(data[-c(1,1),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Create plot
radarchart(data,
seg = 7,  # Number of axis segments
title = "Avengers Radar Chart",
pcol = colors_line,
pfcol = colors_fill,
plwd = 4)
# Add a legend
legend(x=1.25,
y=1.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Construct the data set (Data from Marvel.com)
data ＜- data.frame(Strength = c(7, 0, 6),
Speed = c(7, 0, 5),
Intelligence = c(7, 0, 6),
Fighting_Skills = c(7, 0, 4),
Energy = c(7, 0, 6),
Durability = c(7, 0, 6))
radarchart(data,
seg = 7,  # Number of axis segments
title = "Iron Man Radar Chart",
pfcol = scales::alpha("gray", 0.3),
plwd = 2)
library(readxl)
porteros <- read_excel("C:/Users/Mikel/Documents/Curso_2020-2021/DataDepor/porteros.xlsx")
View(porteros)
# Construct the data set
data ＜- data.frame(Partidos jugados = c(138, 0, 118, 39),
Partidos ganados = c(138, 0, 42, 14),
Partidos empatados = c(138, 0, 37, 10),
Partidos perdidos = c(138, 0, 39, 15),
Goles encajados = c(138, 0, 138, 42),
Partidos sin encajar = c(138, 0, 35, 14),
Jornadas seguidas sin encajar = c(138, 0, 5, 4),
Jornadas seguidas encajando = c(138, 0, 7, 7),
Tarjetas amarillas = c(138, 0, 6, 4),
Tarjetas rojas = c(138, 0, 0, 0),
row.names = c("max", "min", "Carlos Abad", "Lucho"
))
# Construct the data set
data ＜- data.frame(Partidos_jugados = c(138, 0, 118, 39),
Partidos_ganados = c(138, 0, 42, 14),
Partidos_empatados = c(138, 0, 37, 10),
Partidos_perdidos = c(138, 0, 39, 15),
Goles_encajados = c(138, 0, 138, 42),
Partidos_sin_encajar = c(138, 0, 35, 14),
Jornadas_seguidas_sin_encajar = c(138, 0, 5, 4),
Jornadas_seguidas_encajando = c(138, 0, 7, 7),
Tarjetas_amarillas = c(138, 0, 6, 4),
Tarjetas_rojas = c(138, 0, 0, 0),
row.names = c("max", "min", "Carlos Abad", "Lucho"
))
# Define fill colors
colors_fill ＜- c(scales::alpha("tomato", 0.1),
scales::alpha("gold", 0.1))                 )
# Define fill colors
colors_fill ＜- c(scales::alpha("tomato", 0.1),
scales::alpha("gold", 0.1))                 )
# Define fill colors
colors_fill ＜- c(scales::alpha("tomato", 0.1),
scales::alpha("gold", 0.1)
)
# Define line colors
colors_line ＜- c(scales::alpha("darkgray", 0.9),
scales::alpha("royalblue", 0.9))
# Create plot
radarchart(data,
seg = 10,  # Number of axis segments
title = "Porteros Dépor",
pcol = colors_line,
pfcol = colors_fill,
plwd = 2)
# Construct the data set
data ＜- data.frame("Partidos jugados" = c(138, 0, 118, 39),
Partidos_ganados = c(138, 0, 42, 14),
Partidos_empatados = c(138, 0, 37, 10),
Partidos_perdidos = c(138, 0, 39, 15),
Goles_encajados = c(138, 0, 138, 42),
Partidos_sin_encajar = c(138, 0, 35, 14),
Jornadas_seguidas_sin_encajar = c(138, 0, 5, 4),
Jornadas_seguidas_encajando = c(138, 0, 7, 7),
Tarjetas_amarillas = c(138, 0, 6, 4),
Tarjetas_rojas = c(138, 0, 0, 0),
row.names = c("max", "min", "Carlos Abad", "Lucho"
))
# Define fill colors
colors_fill ＜- c(scales::alpha("tomato", 0.1),
scales::alpha("gold", 0.1)
)
# Define line colors
colors_line ＜- c(scales::alpha("darkgray", 0.9),
scales::alpha("royalblue", 0.9))
# Create plot
radarchart(data,
seg = 10,  # Number of axis segments
title = "Porteros Dépor",
pcol = colors_line,
pfcol = colors_fill,
plwd = 2)
# Construct the data set
data ＜- data.frame("Partidos jugados" = c(138, 0, 118, 39),
"Partidosg anados" = c(138, 0, 42, 14),
"Partidos empatados" = c(138, 0, 37, 10),
"Partidos perdidos" = c(138, 0, 39, 15),
"Goles encajados" = c(138, 0, 138, 42),
"Partidos sin encajar" = c(138, 0, 35, 14),
"Jornadas seguidas sin encajar" = c(138, 0, 5, 4),
"Jornadas seguidas encajando" = c(138, 0, 7, 7),
"Tarjetas amarillas" = c(138, 0, 6, 4),
"Tarjetas rojas" = c(138, 0, 0, 0),
row.names = c("max", "min", "Carlos Abad", "Lucho"
))
# Define fill colors
colors_fill ＜- c(scales::alpha("tomato", 0.1),
scales::alpha("gold", 0.1)
)
# Define line colors
colors_line ＜- c(scales::alpha("darkgray", 0.9),
scales::alpha("royalblue", 0.9))
# Create plot
radarchart(data,
seg = 10,  # Number of axis segments
title = "Porteros Dépor",
pcol = colors_line,
pfcol = colors_fill,
plwd = 2)
# Add a legend
legend(x=1.25,
y=1.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Define fill colors
colors_fill ＜- c(scales::alpha("gray", 0.1),
scales::alpha("blue", 0.1)
)
# Define line colors
colors_line ＜- c(scales::alpha("darkgray", 0.9),
scales::alpha("royalblue", 0.9))
# Create plot
radarchart(data,
seg = 10,  # Number of axis segments
title = "Porteros Dépor",
pcol = colors_line,
pfcol = colors_fill,
plwd = 2)
# Add a legend
legend(x=1.25,
y=1.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Construct the data set
data ＜- data.frame("Partidos jugados" = c(138, 0, 118, 39),
"Partidos ganados" = c(138, 0, 42, 14),
"Partidos empatados" = c(138, 0, 37, 10),
"Partidos perdidos" = c(138, 0, 39, 15),
"Goles encajados" = c(138, 0, 138, 42),
"Partidos sin encajar" = c(138, 0, 35, 14),
"Jornadas seguidas sin encajar" = c(138, 0, 5, 4),
"Jornadas seguidas encajando" = c(138, 0, 7, 7),
"Tarjetas amarillas" = c(138, 0, 6, 4),
"Tarjetas rojas" = c(138, 0, 0, 0),
row.names = c("max", "min", "Carlos Abad", "Lucho"
))
# Define fill colors
colors_fill ＜- c(scales::alpha("gray", 0.1),
scales::alpha("blue", 0.1)
)
# Define line colors
colors_line ＜- c(scales::alpha("darkgray", 0.9),
scales::alpha("royalblue", 0.9))
# Create plot
radarchart(data,
seg = 10,  # Number of axis segments
title = "Porteros Dépor",
pcol = colors_line,
pfcol = colors_fill,
plwd = 2)
# Add a legend
legend(x=1.25,
y=1.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
# Define fill colors
colors_fill ＜- c(scales::alpha("gray", 0.1),
scales::alpha("blue", 0.1))
# Define line colors
colors_line ＜- c(scales::alpha("darkgray", 0.9),
scales::alpha("royalblue", 0.9))
# Create plot
radarchart(data,
seg = 10,  # Number of axis segments
title = "Porteros Dépor",
pcol = colors_line,
pfcol = colors_fill,
plwd = 2)
# Create plot
radarchart(data,
seg = 10,  # Number of axis segments
title = "Porteros Dépor",
pcol = colors_line,
pfcol = colors_fill,
plwd = 2)
# Create plot
radarchart(data,
seg = 10,  # Number of axis segments
title = "Porteros Dépor",
pcol = colors_line,
pfcol = colors_fill,
plwd = 2)
# Add a legend
legend(x=1.25,
y=1.35,
legend = rownames(data[-c(1,2),]),
bty = "n", pch=20 , col = colors_line, cex = 1.05, pt.cex = 3)
5+3 #example
5+3 #example
5+2 #example
x <- 5
install.packages("rgdal")
install.packages("cluster")
install.packages("factoextra")
install.packages("vegclust")
#Load data
library(rgdal)
mydata<-readOGR("shp/khabur_triangle.shp",layer="khabur_triangle") # load shape file
mydata<-readOGR("C:/Users/Mikel/Documents/Curso_2021-2022/Margarita_Salas-project/Sites size/data and model/shp/khabur_triangle.shp",layer="khabur_triangle") # load shape file
mydata<-mydata@data #convert shape file into a data frame
View(mydata)
# Percolation analysis
library(percopackage)
# Percolation analysis
library("percopackage")
install.packages("percopackage")
library(percopackage)
library("percopackage")
# Percolation analysis
install.packages("percopackage")
library("percopackage")
install.packages("percopackage")
devtools::install_github("SCSchmidt/percopackage")
devtools::install_github("SCSchmidt/percopackage")
remove.packages(rlang)
install.packages("rlang")
install.packages("rlang")
devtools::install_github("SCSchmidt/percopackage")
devtools::install_github("SCSchmidt/percopackage")
install.packages("Rtools")
devtools::install_github("SCSchmidt/percopackage")
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
Sys.which("make")
altplot <- read.table(file="csv/altplot.csv",header=TRUE, sep=";")
setwd(C:/Users/Mikel/Documents/Curso_2020-2021/Articulo_Monforte_QI/Github)
setwd("C:/Users/Mikel/Documents/Curso_2020-2021/Articulo_Monforte_QI/Github")
altplot <- read.table(file="csv/altplot.csv",header=TRUE, sep=";")
altplot <- read.table(file="C:/Users/Mikel/Documents/Curso_2020-2021/Articulo_Monforte_QI/Github/csv/altplot.csv",header=TRUE, sep=";")
setwd("C:/Users/Mikel/Documents/Curso_2020-2021/Articulo_Monforte_QI/Github/patterns_monforte")
altplot <- read.table(file="C:/Users/Mikel/Documents/Curso_2020-2021/Articulo_Monforte_QI/Github/csv/altplot.csv",header=TRUE, sep=";")
altplot <- read.table(file="csv/altplot.csv",header=TRUE, sep=";")
altplot1 <- read.table(file="csv/altplot1.csv",header=TRUE, sep=";")
altplot2 <- read.table(file="csv/altplot2.csv",header=TRUE, sep=";")
altplot3 <- read.table(file="csv/altplot3.csv",header=TRUE, sep=";")
altplot4 <- read.table(file="csv/altplot4.csv",header=TRUE, sep=";")
library("ggplot2")
library("patchwork")
View(altplot)
altplot$Altitud <- factor (altplot$Altitude, levels = c("0-100", "100-200","200-300","300-400","400-500","500-600","600-700","700-800","800-900","900-1000","1000-1100","1100-1200","1200-1300","1300-1400","1400-1500"), ylim= c(0,90))
altplot$Altitud <- factor (altplot$Altitude, levels = c("0-100", "100-200","200-300","300-400","400-500","500-600","600-700","700-800","800-900","900-1000","1000-1100","1100-1200","1200-1300","1300-1400","1400-1500"))
p <- ggplot(altplot,aes(Altitude,Percentage)) + geom_bar(data=subset(altplot,Category=="Terrain"),stat="identity", fill="gray") + geom_line(data=subset(altplot,Category=="Site"), aes(group="Category", colour="red"),size=1.5) + guides(colour=FALSE) + theme(axis.text=element_text(size=8,face="bold"),axis.title=element_text(size=10,face="bold")) + labs(title = "a. Altitude", y = "Percentage", x = "m.a.s.l.")
p <- p + theme(
panel.background = element_rect(fill = "transparent",colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "transparent",colour = NA)
)
p <- breaks=c(0,50,100)
p <- p'' breaks=c(0,50,100)
p <- p+ breaks=c(0,50,100)
p <- p + scale_y_continuous(breaks=c(0,50,100))
plot(p)
p <- p + ylim(breaks=c(0,50,100))
p <- p + ylim(breaks=c(0,100))
plot(p)
altplot$Altitud <- factor (altplot$Altitude, levels = c("0-100", "100-200","200-300","300-400","400-500","500-600","600-700","700-800","800-900","900-1000","1000-1100","1100-1200","1200-1300","1300-1400","1400-1500"))
p <- ggplot(altplot,aes(Altitude,Percentage)) + geom_bar(data=subset(altplot,Category=="Terrain"),stat="identity", fill="gray") + geom_line(data=subset(altplot,Category=="Site"), aes(group="Category", colour="red"),size=1.5) + guides(colour=FALSE) + theme(axis.text=element_text(size=8,face="bold"),axis.title=element_text(size=10,face="bold")) + labs(title = "a. Altitude", y = "Percentage", x = "m.a.s.l.")
p <- p + theme(
panel.background = element_rect(fill = "transparent",colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "transparent",colour = NA)
)
p <- p + ylim(breaks=c(0,100))
plot(p)
altplot$Altitud <- factor (altplot$Percentage, levels = c("0-10", "10-20", "20,30", "30-40", "40-50", "50-60", "60-70", "70-80", "80-90", "90-100")) (altplot$Altitude, levels = c("0-100", "100-200","200-300","300-400","400-500","500-600","600-700","700-800","800-900","900-1000","1000-1100","1100-1200","1200-1300","1300-1400","1400-1500"))
altplot$Altitud <- factor (altplot$Percentage, levels = c("0-10", "10-20", "20,30", "30-40", "40-50", "50-60", "60-70", "70-80", "80-90", "90-100")) + (altplot$Altitude, levels = c("0-100", "100-200","200-300","300-400","400-500","500-600","600-700","700-800","800-900","900-1000","1000-1100","1100-1200","1200-1300","1300-1400","1400-1500"))
altplot$Altitud <- factor (altplot$Percentage, levels = c("0-10", "10-20", "20,30", "30-40", "40-50", "50-60", "60-70", "70-80", "80-90", "90-100"),altplot$Altitude, levels = c("0-100", "100-200","200-300","300-400","400-500","500-600","600-700","700-800","800-900","900-1000","1000-1100","1100-1200","1200-1300","1300-1400","1400-1500"))
altplot$Altitud <- factor (altplot$Altitude, levels = c("0-100", "100-200","200-300","300-400","400-500","500-600","600-700","700-800","800-900","900-1000","1000-1100","1100-1200","1200-1300","1300-1400","1400-1500"))
p <- ggplot(altplot,aes(Altitude,Percentage)) + geom_bar(data=subset(altplot,Category=="Terrain"),stat="identity", fill="gray") + geom_line(data=subset(altplot,Category=="Site"), aes(group="Category", colour="red"),size=1.5) + guides(colour=FALSE) + theme(axis.text=element_text(size=8,face="bold"),axis.title=element_text(size=10,face="bold")) + labs(title = "a. Altitude", y = "Percentage", x = "m.a.s.l.")
p <- p + theme(
panel.background = element_rect(fill = "transparent",colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "transparent",colour = NA)
)
plot(p)
altplot$Altitud <- factor (altplot$Altitude, levels = c("0-100", "100-200","200-300","300-400","400-500","500-600","600-700","700-800","800-900","900-1000","1000-1100","1100-1200","1200-1300","1300-1400","1400-1500"))
p <- ggplot(altplot,aes(Altitude,Percentage)) + geom_bar(data=subset(altplot,Category=="Terrain"),stat="identity", fill="gray") + geom_line(data=subset(altplot,Category=="Site"), aes(group="Category", colour="red"),size=1.5) + guides(colour=FALSE) + theme(axis.text=element_text(size=8,face="bold"),axis.title=element_text(size=10,face="bold")) + labs(title = "a. Altitude", y = "Percentage", x = "m.a.s.l.")
p <- ggplot(altplot,aes(Altitude,Percentage)) + geom_bar(data=subset(altplot,Category=="Terrain"),stat="identity", fill="gray") + geom_line(data=subset(altplot,Category=="Site"), aes(group="Category", colour="red"),size=1.5) + guides(scale="none",colour=FALSE) + theme(axis.text=element_text(size=8,face="bold"),axis.title=element_text(size=10,face="bold")) + labs(title = "a. Altitude", y = "Percentage", x = "m.a.s.l.")
p <- ggplot(altplot,aes(Altitude,Percentage)) + geom_bar(data=subset(altplot,Category=="Terrain"),stat="identity", fill="gray") + geom_line(data=subset(altplot,Category=="Site"), aes(group="Category", colour="red"),size=1.5) + guides(scale=TRUE,colour=FALSE) + theme(axis.text=element_text(size=8,face="bold"),axis.title=element_text(size=10,face="bold")) + labs(title = "a. Altitude", y = "Percentage", x = "m.a.s.l.")
p <- ggplot(altplot,aes(Altitude,Percentage)) + geom_bar(data=subset(altplot,Category=="Terrain"),stat="identity", fill="gray") + geom_line(data=subset(altplot,Category=="Site"), aes(group="Category", colour="red"),size=1.5) + guides(scale=FALSE,colour=FALSE) + theme(axis.text=element_text(size=8,face="bold"),axis.title=element_text(size=10,face="bold")) + labs(title = "a. Altitude", y = "Percentage", x = "m.a.s.l.")
guides(<scale> = "none")
guides(scale = "none")
ggplot2::guides(
ggplot2::guides()
ggplot2::guides()
update.packages("ggplot2")
altplot$Altitud <- factor (altplot$Altitude, levels = c("0-100", "100-200","200-300","300-400","400-500","500-600","600-700","700-800","800-900","900-1000","1000-1100","1100-1200","1200-1300","1300-1400","1400-1500"))
p <- ggplot(altplot,aes(Altitude,Percentage)) + geom_bar(data=subset(altplot,Category=="Terrain"),stat="identity", fill="gray") + geom_line(data=subset(altplot,Category=="Site"), aes(group="Category", colour="red"),size=1.5) + guides(colour=FALSE) + theme(axis.text=element_text(size=8,face="bold"),axis.title=element_text(size=10,face="bold")) + labs(title = "a. Altitude", y = "Percentage", x = "m.a.s.l.")
p <- p + theme(
panel.background = element_rect(fill = "transparent",colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "transparent",colour = NA)
)
plot(p)
View(altplot)
altplot$Altitud <- factor (altplot$Altitude, levels = c("0-100", "100-200","200-300","300-400","400-500","500-600","600-700","700-800","800-900","900-1000","1000-1100","1100-1200","1200-1300","1300-1400","1400-1500"))
p <- ggplot(altplot,aes(Altitude,Percentage)) + geom_bar(data=subset(altplot,Category=="Terrain"),stat="identity", fill="gray") + geom_line(data=subset(altplot,Category=="Site"), aes(group="Category", colour="red"),size=1.5) + guides(colour=FALSE) + theme(axis.text=element_text(size=8,face="bold"),axis.title=element_text(size=10,face="bold")) + labs(title = "a. Altitude", y = "Percentage", x = "m.a.s.l.")
p <- p + theme(
panel.background = element_rect(fill = "transparent",colour = NA),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_rect(fill = "transparent",colour = NA)
)
p <- p + ylim=(0,100)
p <- ggplot(altplot,aes(Altitude,Percentage)) + geom_bar(data=subset(altplot,Category=="Terrain"),stat="identity", fill="gray") + geom_line(data=subset(altplot,Category=="Site"), aes(group="Category", colour="red"),size=1.5) + guides(colour=FALSE) + theme(axis.text=element_text(size=8,face="bold"),axis.title=element_text(size=10,face="bold")) + labs(title = "a. Altitude", y = "Percentage", x = "m.a.s.l.") + binwidth = 10)
library(ggplot2)
set.seed(1234)
df <- data.frame(
sex=factor(rep(c("M", "H"), each=200)),
weight=round(c(rnorm(200, mean=55, sd=5), rnorm(200, mean=65, sd=5)))
)
head(df)
#histograma normal
p<-ggplot(df, aes(x=weight)) +
geom_histogram(aes(y=..density..), colour="black", fill="white")+
geom_density(alpha=.2, fill="#FF6666")
p7<-p+ geom_vline(aes(xintercept=mean(weight)),
color="blue", linetype="dashed", size=1)
p7
p1<-ggplot(df, aes(x=weight,fill=sex, color=sex)) +
geom_histogram(alpha=0.6, position="identity")+
geom_density(alpha=.2)
p1
p2<-ggplot(df, aes(x=weight,fill=sex, color=sex)) +
geom_histogram(aes(y=..density..), position="identity", alpha=0.5)+
geom_density(alpha=.2)
p2
library(plyr)
mu <- ddply(df, "sex", summarise, grp.mean=mean(weight))
head(mu)
p3<-p2+geom_vline(data=mu, aes(xintercept=grp.mean, color=sex),
linetype="dashed")+
theme_minimal()
p3
p4<-p<-ggplot(df, aes(x=weight,fill=sex, color=sex)) +
geom_histogram(position="dodge",binwidth = 1)+
geom_vline(data=mu, aes(xintercept=grp.mean, color=sex),
linetype="dashed")
p4
p5<-p4+ scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))
p5
p6<-p4+scale_color_brewer(palette="Dark2")+
scale_fill_brewer(palette="Dark2")
p6
p
p1
p2
p3
p4
p5
p6
p7
View(p)
View(p1)
